

.settings-view {

  // Breadcrumb at the top
  .breadcrumb {

    .bgcolor(@background-color, @value-background-color);
    background-color: @bgcolor;


    & > li a {
      .color(@button-color, @value-button-color);
      color: @color;


      &::after {
        content:' âžœ '
      }
    }

    & > .active a {
      .color(@button-color, @value-button-color);
      color: @color;
    }
  }






  .text {
    .color(@text-color, @value-text-color);
    color: @color;
  }

  .link {
    .color(@button-color, @value-button-color);
    color: @color;
  }

  .alert-info {
    .color(@text-color, @value-text-color);
    color: @color;

    border: 0;
    border-color: none;
    .bgcolor(@background-color, @value-background-color);
    background-color: @bgcolor;
  }


  .setting-description {
    .color(@text-color, @value-text-color);
    color: @color;
  }

  // Ok. This was breaking the navigation.
  // And it seems to be working fine turned off. So fuck it.

  // .panels {
  //   flex: none;
  //   flex-flow: column;
  //   display: flex;
  //   min-width: 100%;
  //   position: relative;
  // }




  // Settings menu on left hand side
  .config-menu {


    .bgcolor(@background-color, @value-background-color);
    background-color: @bgcolor;

    .bordercolor(@background-color, @value-border-color);
    border-color: @bordercolor;
    border-top: 1px solid @bordercolor;
    border-bottom: 1px solid @bordercolor;

    & when (@settings-nav = horizontal) {
      display: flex;
      justify-content: space-between;
      flex: none;

      min-width: 100%;
      max-width: 100%;
      -webkit-user-select: none;
      user-select: none;
      padding-top: 0;
      border-right: 0;
      overflow-y: scroll;
    }

    .nav {
      .bgcolor(@background-color, @value-background-color);
      background-color: @bgcolor;

      & when (@settings-nav = horizontal) {
        display: flex;
        justify-content: space-between;
        width: 100%;
      }

      &:hover {
        .bgcolor(@background-color, @value-background-color);
        background-color: @bgcolor;
      }

      & > li {
        & when (@settings-nav = horizontal) {
          text-align: center;
          width: 100%;
        }
      }

      & > li > a {

        .color(@text-color, @value-text-color);
        color: @color;

        display: block;

        & when (@settings-nav = horizontal) {
          .bordercolor(@background-color, @value-border-color);
          border-color: @bordercolor;
          border-right: 1px solid @bordercolor;

          padding: 6px;
          height: @tab-height;
        }

        & when (@settings-nav = vertical) {
          padding: @component-padding * .75 @component-padding * 1;
        }

        width: 100%;

        &:hover {
          .bgcolor(@button-color, @value-button-color);
          background-color: @bgcolor;

          .color(@text-color, @value-text-color);
          color: @color;
        }
      }

      & > li.active > a {
        .bgcolor(@button-color, @value-button-color);
        background-color: @bgcolor;

        .color(@text-color, @value-text-color);
        color: @color;
      }
    }

    .button-area {
      .bgcolor(@background-color, @value-background-color);
      background-color: @bgcolor;

      margin: 0;
      padding: 0;

      .btn {
        .bgcolor(@background-color, @value-background-color);
        background-color: @bgcolor;

        border-radius: 0;
        border: 0;

        .color(@text-color, @value-text-color);
        color: @color;

        font-size: inherit;
        height: 100%;

        line-height: 1;
        padding: 7px 15px;
        text-shadow: none;
        z-index: 0;

        &:hover {
          .bgcolor(@button-color, @value-button-color);
          background-color: @bgcolor;
        }
      }
    }


    a.icon,
    button.icon {
      //color: @graphite;
    }
  }


  // Ugh - the container
  .section.section.settings-panel {
    border-top: none;
    //padding: @component-padding * 3;
  }


  .settings-panel label {
    .color(@text-color, @value-text-color);
    color: @color;
  }


  // each sheet
  .section-container {
    .bgcolor(@background-color, @value-background-color);
    background-color: @bgcolor;

    & when (@settings-border = true) {
      .bordercolor(@background-color, @value-border-color);
      border-color: @bordercolor;
      border: 1px solid @bordercolor;
    }

    // box-shadow: 0 10px 25px -16px #000;
    padding: @component-padding * 3;

    & when (@settings-nav = horizontal) {
      margin: 0 auto;
      max-width: 850px;
    }
  }

  .select-container {
    & when (@settings-nav = horizontal) {
      display: flex;
      align-items: stretch;
    }

    .btn {
      border-radius: 4px;
      height: inherit;
      margin-left: 4px;
    }
  }



  // Main container holding a list of all packages
  .section {
    // Padding for this whole container
    .bordercolor(@background-color, @value-border-color);
    border-top: 1px solid @bordercolor;

    padding: @component-padding * 3;

    &:first-child,
    &:last-child {
      border-top: none;
      padding: @component-padding * 3;
    }


    .section-heading {
      .color(@heading-color, @value-heading-color);
      color: @color;
    }
  }


  .sub-section .sub-section-heading {
    .color(@heading-color, @value-heading-color);
    color: @color;
  }

  .sub-section .sub-section-heading.has-items::after {
    .color(@text-color, @value-text-color);
    color: @color;
  }


  .sub-section .sub-section-heading.has-items:hover::after {
    .color(@button-color, @value-button-color);
    color: @color;
  }


  .package-detail .package-card:hover {

    .bgcolor(@background-color, @value-background-color);
    background-color: @bgcolor;
    &:hover {
      .bordercolor(@background-color, @value-border-color);

      .bgcolor(@background-color, @value-background-color);
      background-color: @bgcolor;
      background-image: repeating-linear-gradient(-45deg, @trans, @trans 7px, @bordercolor 7px, @bordercolor 8px);
    }
  }




  .package-readme {
    h1,
    h2,
    h3,
    h4,
    hr,
    p,
    li {
      .color(@text-color, @value-text-color);
      color: @color;
    }
  }




  .table {
    .bgcolor(@background-color, @value-background-color);
    background-color: @bgcolor;

    .bordercolor(@background-color, @value-border-color);
    border: 1px solid @bordercolor;
  }

  .package-card {
    .bgcolor(@background-color, @value-background-color);
    background-color: @bgcolor;

    border: 0;
    border-radius: 0;
    //border-bottom: 1px solid @charcoal;

    &:hover {
      .bordercolor(@background-color, @value-border-color);

      .bgcolor(@background-color, @value-background-color);
      background-color: @bgcolor;
      background-image: repeating-linear-gradient(-45deg, @trans, @trans 7px, @bordercolor 7px, @bordercolor 8px);
    }

    //Package heading link
    .package-name{
      .color(@button-color, @value-button-color);
      color: @color;
    }


    &.disabled {
      .bordercolor(@background-color, @value-border-color);

      .bgcolor(@background-color, @value-background-color);
      background-color: @bgcolor;
      background-image: repeating-linear-gradient(-45deg, @trans, @trans 7px, @bordercolor 7px, @bordercolor 8px);
    }

    // Package stats
    .stats .stats-item .icon {
      .color(@text-color, @value-text-color);
      color: @color;
    }

    // Package description color
    .package-description,
    .value {
      .color(@text-color, @value-text-color);
      color: @color;
    }

    // Author link color
    .meta-user .author {
      .color(@button-color, @value-button-color);
      color: @color;
    }


    // A status indicator to the far right of
    // the button group
    .meta-controls .status-indicator {
      //background-color: @trans;
    }
  }

  input[type="checkbox"] {
    .bordercolor(@background-color, @value-border-color);
    background-color: @bordercolor;

    &:checked {
      .bgcolor(@button-color, @value-button-color);
      background-color: @bgcolor;
    }
  }
}


.settings-view select.form-control {
  .bgcolor(@button-color, @value-button-color);
  background-color: @bgcolor;

  .bordercolor(@background-color, @value-border-color);
  border-color: @bordercolor;

  .color(@text-color, @value-text-color);
  color: @color;

  &:hover {
    .bgcolor(@button-color, @value-border-color);
    background-color: @bgcolor;

    .color(@button-color, @value-button-color);
    color: @color;
  }
}

button.icon.icon-gear.active-theme-settings {
  .color(@text-color, @value-text-color);
  color: @color;
}

pre {
  background-color: @trans;

  .bordercolor(@text-color, @value-text-color);
  border: 1px solid @bordercolor;

  border-radius: 0;

  .color(@text-color, @value-text-color);
  color: @color;
}

code {
  .color(@text-color, @value-text-color);
  .bgcolor(@background-color, @value-background-color);
  color: @bgcolor;
  background-color: @color;

  border-radius: 0;
}



//
// .settings-view .package-readme hr {
//   .color(@text-color, @value-text-color);
//   color: @color;
// }
