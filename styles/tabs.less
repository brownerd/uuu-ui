// Tabs
// -------------------

// Displays selectable tabs above the editor.
// Overrides: atom/tabs

.tab-bar {
  .bgcolor(@background-color, @background-navvalue);
  background-color: @bgcolor;

  border: none;
  //border-bottom: 1px solid darken(@tab-background-color, 10%);

  // &:hover {
  //   .bgcolor(@background-color, @background-value);
  //   background-color: lighten(@bgcolor, 5%);
  // }


  .tab {
    .bgcolor(@background-color, @background-value);
    background-color: @trans;

    .bordercolor(@background-color, @background-value);
    border-right: 1px solid @bordercolor;

    .color(@text-color, @text-value);
    color: @color;

    font-size: @font-size;
    height: @tab-height;
    line-height: @tab-height;


    &:hover {
      .bgcolor(@button-color, @button-value);
      background-color: @bgcolor;

      .color(@background-color, @background-navvalue);
      color: @color;

      .close-icon {
        .color(@background-color, @background-navvalue);
        color: @color;
      }
    }


    &.active {
      .bgcolor(@button-color, @button-value);
      background-color: @bgcolor;

      & when (@button-textcolor = background) {
        .color(@background-color, @background-navvalue);
        color: @color;
      }

      & when (@button-textcolor = text) {
        .color(@text-color, @text-value);
        color: @color;
      }

      & when (@button-textcolor = heading) {
        .color(@heading-color, @heading-value);
        color: @color;
      }

      // &:hover {
      //   .bgcolor(@background-color, @background-value);
      //   background-color: darken(@bgcolor, 5%);
      // }
    }


    // Close Icon (the X) -------------------
    .close-icon {
      // transform: scale(0) rotate(0);
      // transform-origin: center center

      & when (@button-textcolor = background) {
        .color(@background-color, @background-navvalue);
        color: @color;
      }

      & when (@button-textcolor = text) {
        .color(@text-color, @text-value);
        color: @color;
      }

      & when (@button-textcolor = heading) {
        .color(@heading-color, @heading-value);
        color: @color;
      }


      &:hover {
        .color(@button-color, @button-value);
        color: spin(saturate(@color, 100%), 160);
      }
    }

    &.active .close-icon:hover {
      .color(@button-color, @button-value);
      color: spin(saturate(@color, 100%), 160);
    }


    // Dragging -------------------
    // Styles get applied while dragging a tab
    &.is-dragging {
      .bgcolor(@button-color, @button-value);
      background-color: @bgcolor;
      border-color: transparent;
      opacity: .5;
      & .close-icon {
        visibility: hidden;
      }
    }

    // Modified Icon (the blue circle) -------------------
    &.modified:not(:hover) .close-icon {
      .color(@button-color, @button-value);
      border-color: spin(saturate(@color, 100%), 160);

      top: 50%;
      right: @component-padding + 4px; // 4px -> half of icon size
      margin-top: -3px;
      //border-color: spin(saturate(@color, 100%), 160);
      //border: none;
    }
    &.modified:hover .close-icon {
      .color(@button-color, @button-value);
      color: spin(saturate(@color, 100%), 160);
    }

  }
}


.inset-panel {
  border-radius: 0;
}
